openapi: 3.0.3
info:
  title: E-COMMERCE API
  version: 1.0.0
  description: E-COMMERCE project description
paths:
  /category/:
    get:
      operationId: categoryList
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - category
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCategoryList'
          description: ''
    post:
      operationId: categoryCreate
      tags:
      - category
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Category'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Category'
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
  /category/{id}/:
    get:
      operationId: categoryRetrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Category.
        required: true
      tags:
      - category
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
    put:
      operationId: categoryUpdate
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Category.
        required: true
      tags:
      - category
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Category'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Category'
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
    patch:
      operationId: categoryPartialUpdate
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Category.
        required: true
      tags:
      - category
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCategory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCategory'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCategory'
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
    delete:
      operationId: categoryDestroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Category.
        required: true
      tags:
      - category
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /generate-order/:
    post:
      operationId: generateOrderCreate
      tags:
      - generate-order
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Order'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Order'
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
  /generate-payment/:
    post:
      operationId: generatePaymentCreate
      tags:
      - generate-payment
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Payment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Payment'
          application/json:
            schema:
              $ref: '#/components/schemas/Payment'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
          description: ''
  /groups/:
    get:
      operationId: groupsList
      description: API endpoint that allows groups to be viewed or edited.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - groups
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedGroupList'
          description: ''
    post:
      operationId: groupsCreate
      description: API endpoint that allows groups to be viewed or edited.
      tags:
      - groups
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Group'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Group'
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: ''
  /groups/{id}/:
    get:
      operationId: groupsRetrieve
      description: API endpoint that allows groups to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this group.
        required: true
      tags:
      - groups
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: ''
    put:
      operationId: groupsUpdate
      description: API endpoint that allows groups to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this group.
        required: true
      tags:
      - groups
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Group'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Group'
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: ''
    patch:
      operationId: groupsPartialUpdate
      description: API endpoint that allows groups to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this group.
        required: true
      tags:
      - groups
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedGroup'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedGroup'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedGroup'
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: ''
    delete:
      operationId: groupsDestroy
      description: API endpoint that allows groups to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this group.
        required: true
      tags:
      - groups
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /order/:
    get:
      operationId: orderList
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - order
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedOrderList'
          description: ''
    post:
      operationId: orderCreate
      tags:
      - order
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Order'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Order'
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
  /order-item/:
    get:
      operationId: orderItemList
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - order-item
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedOrderItemList'
          description: ''
    post:
      operationId: orderItemCreate
      tags:
      - order-item
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrderItem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrderItem'
          application/json:
            schema:
              $ref: '#/components/schemas/OrderItem'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderItem'
          description: ''
  /order-item/{id}/:
    get:
      operationId: orderItemRetrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this OrderItem.
        required: true
      tags:
      - order-item
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderItem'
          description: ''
    put:
      operationId: orderItemUpdate
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this OrderItem.
        required: true
      tags:
      - order-item
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrderItem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrderItem'
          application/json:
            schema:
              $ref: '#/components/schemas/OrderItem'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderItem'
          description: ''
    patch:
      operationId: orderItemPartialUpdate
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this OrderItem.
        required: true
      tags:
      - order-item
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOrderItem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOrderItem'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOrderItem'
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderItem'
          description: ''
    delete:
      operationId: orderItemDestroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this OrderItem.
        required: true
      tags:
      - order-item
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /order/{id}/:
    get:
      operationId: orderRetrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this order.
        required: true
      tags:
      - order
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
    put:
      operationId: orderUpdate
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this order.
        required: true
      tags:
      - order
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Order'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Order'
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
    patch:
      operationId: orderPartialUpdate
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this order.
        required: true
      tags:
      - order
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOrder'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOrder'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOrder'
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
    delete:
      operationId: orderDestroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this order.
        required: true
      tags:
      - order
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /order/generate-order/:
    post:
      operationId: orderGenerateOrderCreate
      tags:
      - order
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Order'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Order'
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
  /payments/:
    get:
      operationId: paymentsList
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - payments
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPaymentList'
          description: ''
    post:
      operationId: paymentsCreate
      tags:
      - payments
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Payment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Payment'
          application/json:
            schema:
              $ref: '#/components/schemas/Payment'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
          description: ''
  /payments/{id}/:
    get:
      operationId: paymentsRetrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this payment.
        required: true
      tags:
      - payments
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
          description: ''
    put:
      operationId: paymentsUpdate
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this payment.
        required: true
      tags:
      - payments
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Payment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Payment'
          application/json:
            schema:
              $ref: '#/components/schemas/Payment'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
          description: ''
    patch:
      operationId: paymentsPartialUpdate
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this payment.
        required: true
      tags:
      - payments
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPayment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPayment'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPayment'
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
          description: ''
    delete:
      operationId: paymentsDestroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this payment.
        required: true
      tags:
      - payments
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /payments/generate-payment/:
    post:
      operationId: paymentsGeneratePaymentCreate
      tags:
      - payments
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Payment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Payment'
          application/json:
            schema:
              $ref: '#/components/schemas/Payment'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
          description: ''
  /product/:
    get:
      operationId: productList
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - product
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProductList'
          description: ''
    post:
      operationId: productCreate
      tags:
      - product
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Product'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Product'
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
  /product-item/:
    get:
      operationId: productItemList
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - product-item
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProductItemList'
          description: ''
    post:
      operationId: productItemCreate
      tags:
      - product-item
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductItem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductItem'
          application/json:
            schema:
              $ref: '#/components/schemas/ProductItem'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductItem'
          description: ''
  /product-item/{id}/:
    get:
      operationId: productItemRetrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this ProductItem.
        required: true
      tags:
      - product-item
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductItem'
          description: ''
    put:
      operationId: productItemUpdate
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this ProductItem.
        required: true
      tags:
      - product-item
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductItem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductItem'
          application/json:
            schema:
              $ref: '#/components/schemas/ProductItem'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductItem'
          description: ''
    patch:
      operationId: productItemPartialUpdate
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this ProductItem.
        required: true
      tags:
      - product-item
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProductItem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProductItem'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProductItem'
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductItem'
          description: ''
    delete:
      operationId: productItemDestroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this ProductItem.
        required: true
      tags:
      - product-item
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /product/{id}/:
    get:
      operationId: productRetrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Product.
        required: true
      tags:
      - product
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    put:
      operationId: productUpdate
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Product.
        required: true
      tags:
      - product
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Product'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Product'
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    patch:
      operationId: productPartialUpdate
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Product.
        required: true
      tags:
      - product
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProduct'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProduct'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProduct'
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    delete:
      operationId: productDestroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Product.
        required: true
      tags:
      - product
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /shopping-cart/:
    get:
      operationId: shoppingCartList
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - shopping-cart
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedShoppingCartList'
          description: ''
    post:
      operationId: shoppingCartCreate
      tags:
      - shopping-cart
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ShoppingCart'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ShoppingCart'
          application/json:
            schema:
              $ref: '#/components/schemas/ShoppingCart'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShoppingCart'
          description: ''
  /shopping-cart/{id}/:
    get:
      operationId: shoppingCartRetrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this shopping cart.
        required: true
      tags:
      - shopping-cart
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShoppingCart'
          description: ''
    put:
      operationId: shoppingCartUpdate
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this shopping cart.
        required: true
      tags:
      - shopping-cart
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ShoppingCart'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ShoppingCart'
          application/json:
            schema:
              $ref: '#/components/schemas/ShoppingCart'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShoppingCart'
          description: ''
    patch:
      operationId: shoppingCartPartialUpdate
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this shopping cart.
        required: true
      tags:
      - shopping-cart
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedShoppingCart'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedShoppingCart'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedShoppingCart'
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShoppingCart'
          description: ''
    delete:
      operationId: shoppingCartDestroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this shopping cart.
        required: true
      tags:
      - shopping-cart
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /users/:
    get:
      operationId: usersList
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - users
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserList'
          description: ''
    post:
      operationId: usersCreate
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - users
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /users/{id}/:
    get:
      operationId: usersRetrieve
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - users
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: usersUpdate
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - users
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: usersPartialUpdate
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - users
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: usersDestroy
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - users
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
components:
  schemas:
    Category:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        created:
          type: string
          format: date-time
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
        parent:
          type: integer
          nullable: true
      required:
      - created
      - id
      - modified
      - name
    Group:
      type: object
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        name:
          type: string
          maxLength: 150
      required:
      - name
      - url
    Order:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        total:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        shipping_address:
          type: string
          maxLength: 255
        status:
          $ref: '#/components/schemas/StatusEnum'
        created:
          type: string
          format: date-time
          readOnly: true
        user:
          type: integer
        shipping_method:
          type: integer
          nullable: true
      required:
      - created
      - id
      - shipping_address
      - total
      - user
    OrderItem:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        quantity:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        price:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        status:
          $ref: '#/components/schemas/StatusEnum'
        created:
          type: string
          format: date-time
          readOnly: true
        product_item:
          type: integer
        order:
          type: integer
      required:
      - created
      - id
      - order
      - price
      - product_item
      - quantity
    PaginatedCategoryList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Category'
    PaginatedGroupList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Group'
    PaginatedOrderItemList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/OrderItem'
    PaginatedOrderList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Order'
    PaginatedPaymentList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Payment'
    PaginatedProductItemList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ProductItem'
    PaginatedProductList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Product'
    PaginatedShoppingCartList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ShoppingCart'
    PaginatedUserList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/User'
    PatchedCategory:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        created:
          type: string
          format: date-time
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
        parent:
          type: integer
          nullable: true
    PatchedGroup:
      type: object
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        name:
          type: string
          maxLength: 150
    PatchedOrder:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        total:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        shipping_address:
          type: string
          maxLength: 255
        status:
          $ref: '#/components/schemas/StatusEnum'
        created:
          type: string
          format: date-time
          readOnly: true
        user:
          type: integer
        shipping_method:
          type: integer
          nullable: true
    PatchedOrderItem:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        quantity:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        price:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        status:
          $ref: '#/components/schemas/StatusEnum'
        created:
          type: string
          format: date-time
          readOnly: true
        product_item:
          type: integer
        order:
          type: integer
    PatchedPayment:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        payment_method:
          type: string
          nullable: true
          maxLength: 255
        billing_address:
          type: string
        transaction_id:
          type: string
          nullable: true
          maxLength: 255
        amount:
          type: number
          format: double
        card_number:
          type: string
          nullable: true
          maxLength: 255
        expiration_date:
          type: string
          format: date
          nullable: true
        cvv:
          type: string
          nullable: true
          maxLength: 10
        status:
          type: boolean
        created:
          type: string
          format: date-time
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
        user:
          type: integer
          nullable: true
        order:
          type: integer
          nullable: true
        payment_type:
          type: integer
          nullable: true
    PatchedProduct:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        items:
          type: array
          items:
            $ref: '#/components/schemas/ProductItem'
          readOnly: true
        name:
          type: string
          maxLength: 100
        description:
          type: string
          nullable: true
        product_image_link:
          type: string
          nullable: true
          maxLength: 255
        created:
          type: string
          format: date-time
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
        category:
          type: integer
          nullable: true
    PatchedProductItem:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        SKU:
          type: string
          maxLength: 50
        stock:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        price:
          type: number
          format: double
        product_image_link:
          type: string
          nullable: true
          maxLength: 255
        created:
          type: string
          format: date-time
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
        product:
          type: integer
    PatchedShoppingCart:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        quantity:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        created:
          type: string
          format: date-time
          readOnly: true
        user:
          type: integer
        product_item:
          type: integer
    PatchedUser:
      type: object
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        groups:
          type: array
          items:
            type: string
            format: uri
          description: The groups this user belongs to. A user will get all permissions
            granted to each of their groups.
    Payment:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        payment_method:
          type: string
          nullable: true
          maxLength: 255
        billing_address:
          type: string
        transaction_id:
          type: string
          nullable: true
          maxLength: 255
        amount:
          type: number
          format: double
        card_number:
          type: string
          nullable: true
          maxLength: 255
        expiration_date:
          type: string
          format: date
          nullable: true
        cvv:
          type: string
          nullable: true
          maxLength: 10
        status:
          type: boolean
        created:
          type: string
          format: date-time
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
        user:
          type: integer
          nullable: true
        order:
          type: integer
          nullable: true
        payment_type:
          type: integer
          nullable: true
      required:
      - amount
      - billing_address
      - created
      - id
      - modified
    Product:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        items:
          type: array
          items:
            $ref: '#/components/schemas/ProductItem'
          readOnly: true
        name:
          type: string
          maxLength: 100
        description:
          type: string
          nullable: true
        product_image_link:
          type: string
          nullable: true
          maxLength: 255
        created:
          type: string
          format: date-time
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
        category:
          type: integer
          nullable: true
      required:
      - created
      - id
      - items
      - modified
      - name
    ProductItem:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        SKU:
          type: string
          maxLength: 50
        stock:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        price:
          type: number
          format: double
        product_image_link:
          type: string
          nullable: true
          maxLength: 255
        created:
          type: string
          format: date-time
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
        product:
          type: integer
      required:
      - SKU
      - created
      - id
      - modified
      - price
      - product
      - stock
    ShoppingCart:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        quantity:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        created:
          type: string
          format: date-time
          readOnly: true
        user:
          type: integer
        product_item:
          type: integer
      required:
      - created
      - id
      - product_item
      - quantity
      - user
    StatusEnum:
      enum:
      - Pending
      - Confirmed
      - Cancelled
      type: string
      description: |-
        * `Pending` - Pending
        * `Confirmed` - Confirmed
        * `Cancelled` - Cancelled
    User:
      type: object
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        groups:
          type: array
          items:
            type: string
            format: uri
          description: The groups this user belongs to. A user will get all permissions
            granted to each of their groups.
      required:
      - url
      - username
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
